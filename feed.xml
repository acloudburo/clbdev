<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>dev@cloudburo</title>
  <subtitle>Cloudburo Developer Blog</subtitle>
  <id>https://dev.cloudburo.net/</id>
  <link href="https://dev.cloudburo.net/"/>
  <link href="https://dev.cloudburo.net/feed.xml" rel="self"/>
  <updated>2015-05-27T08:46:21Z</updated>
  <author>
    <name>Felix Kuestahler</name>
  </author>
  <entry>
    <title>Docker Small Hints #4: Cleaning up your local zombie docker images</title>
    <link rel="alternate" href="https://dev.cloudburo.net/2015/05/27/docker-small-hints-4-cleaning-up-your-local-zombie-docker-images.html"/>
    <id>https://dev.cloudburo.net/2015/05/27/docker-small-hints-4-cleaning-up-your-local-zombie-docker-images.html</id>
    <published>2015-05-27T08:46:21Z</published>
    <updated>2015-05-28T06:15:24+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="row"&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;div&gt; 
       &lt;div style=""&gt;
         The following commands I found very useful to get rid of zombie docker objects/images, which are accumulated over testing time. If you don’t remove them from time to time,  it can happen that your local docker environment runs out of space. Or you get some weird FileSystem errors during your docker build. 
       &lt;/div&gt; 
       &lt;div style=""&gt; 
        &lt;br&gt; 
       &lt;/div&gt; 
       &lt;div style=""&gt;
         &amp;lt;code&amp;gt; shell 
       &lt;/div&gt; 
       &lt;div style=""&gt;
         docker ps -a -q | xargs -n 1 docker rm 
       &lt;/div&gt; 
       &lt;div style=""&gt;
         docker images -q &amp;ndash;filter &amp;ldquo;dangling=true&amp;rdquo; | xargs docker rmi 
       &lt;/div&gt; 
       &lt;div style=""&gt;
         docker images 
       &lt;/div&gt; 
       &lt;div style=""&gt;
         &amp;lt;/code&amp;gt; 
       &lt;/div&gt; 
      &lt;/div&gt;&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Large-scale cluster management at Google with Borg</title>
    <link rel="alternate" href="https://dev.cloudburo.net/2015/05/25/large-scale-cluster-management-at-google-with-borg.html"/>
    <id>https://dev.cloudburo.net/2015/05/25/large-scale-cluster-management-at-google-with-borg.html</id>
    <published>2015-05-25T07:13:55Z</published>
    <updated>2015-05-25T08:38:43+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="row"&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;div&gt;
        Research@google published a new very interesting paper about their architecture of Borg at an ACM venue. It’s the underlying architecture for Kubernetes and provides a lot of insights. 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt;
        Abstract of the document: 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;span style=""&gt;&lt;span style=""&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt; 
      &lt;/div&gt; 
      &lt;div style=""&gt; 
       &lt;i&gt;Google&amp;rsquo;s Borg system is a cluster manager that runs hundreds of thousands of jobs, from many thousands of different applications, across a number of clusters each with up to tens of thousands of machines. It achieves high utilization by combining admission control, efficient task-packing, over-commitment, and machine sharing with process-level performance isolation. It supports high-availability applications with runtime features that minimize fault-recovery time, and scheduling policies that reduce the probability of correlated failures. Borg simplifies life for its users by offering a declarative job specification language, name service integration, real-time job monitoring, and tools to analyze and simulate system behavior.&lt;/i&gt; 
      &lt;/div&gt; 
      &lt;div style=""&gt; 
       &lt;i&gt;&lt;br&gt;&lt;/i&gt; 
      &lt;/div&gt; 
      &lt;div style=""&gt; 
       &lt;i&gt;We present a summary of the Borg system architecture and features, important design decisions, a quantitative analysis of some of its policy decisions, and a qualitative examination of lessons learned from a decade of operational experience with it.&lt;/i&gt; 
      &lt;/div&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;a href="http://research.google.com/pubs/pub43438.html"&gt;Link&lt;/a&gt;&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Grails Small Hints #2 - Running in Docker</title>
    <link rel="alternate" href="https://dev.cloudburo.net/2015/05/21/grails-small-hints-2-running-in-docker.html"/>
    <id>https://dev.cloudburo.net/2015/05/21/grails-small-hints-2-running-in-docker.html</id>
    <published>2015-05-21T05:00:38Z</published>
    <updated>2015-05-21T05:54:09+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="row"&gt;
  &lt;div class="article"&gt;&lt;p&gt;&lt;span/&gt;      &lt;div&gt; 
   &lt;div&gt;
     There is a out-of-the-box docker-grails instance provided, which  you can find  here 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;a href="https://github.com/onesysadmin/docker-grails" rel="nofollow"&gt;&lt;a href="https://github.com/onesysadmin/docker-grails"&gt;https://github.com/onesysadmin/docker-grails&lt;/a&gt;&lt;/a&gt; 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
   &lt;div&gt;
     In order to attach your local development directory &amp;ldquo;&amp;hellip;/workspace-grails/clb-platform&amp;rdquo; to the internal /app directory run it as follows 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
   &lt;div&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
docker run -i -t -p 8080:8080 --rm -v /Users/Felix/Development/workspace-grails/clb-platform:/app onesysadmin/grails grails 

&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 

&lt;p&gt;&lt;div&gt;
     You will find the IP address in the docker startup message 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
   &lt;div&gt;
     To connect the Docker client to the Docker daemon, please set: 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
   &lt;div&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
export DOCKER_CERT_PATH=/Users/Felix/.boot2docker/certs/boot2docker-vm 
  export DOCKER_TLS_VERIFY=1 
  export DOCKER_HOST=tcp://192.168.59.103:2376 

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
   &lt;div&gt;
     For example 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;a href="http://192.168.59.103:8080/clb-platform/curationApp/detail" rel="nofollow"&gt;&lt;a href="http://192.168.59.103:8080/clb-platform/curationApp/detail"&gt;http://192.168.59.103:8080/clb-platform/curationApp/detail&lt;/a&gt;&lt;/a&gt; 
   &lt;/div&gt; 
  &lt;/div&gt;&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Micro Business Quick Tips #3: Are These 4 Common Legal Mistakes Putting Your Content at Risk?</title>
    <link rel="alternate" href="https://dev.cloudburo.net/2015/05/07/micro-business-quick-tips-3-are-these-4-common-legal-mistakes-putting-your-conte.html"/>
    <id>https://dev.cloudburo.net/2015/05/07/micro-business-quick-tips-3-are-these-4-common-legal-mistakes-putting-your-conte.html</id>
    <published>2015-05-07T08:57:51Z</published>
    <updated>2015-05-14T22:22:14+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="row"&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;div&gt;
        This is an interesting article which outlines some legal stuff you should consider when publishing content. As they state 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;i&gt;&amp;ldquo;If you’re doing it right, your digital media business is probably an intellectual property factory. Smart small businesses have a content creation conveyor belt and publish new content all day everyday, from ebooks to infographics. And while there is a lot of talk about the benefits of creating content, there is very little talk about protecting it&amp;rdquo;&lt;/i&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;i&gt;&lt;br&gt;&lt;/i&gt; 
      &lt;/div&gt; 
      &lt;div&gt;
        Make sure that you don’t make the following 4 mistakes: 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;ul&gt; 
       &lt;li&gt;Mistake #1: Not copyrighting your content&lt;/li&gt; 
       &lt;li&gt;Mistake #2: Not posting terms and conditions on your website&amp;nbsp;&lt;/li&gt; 
       &lt;li&gt;Mistake #3: Failing to use technology to police your work&lt;/li&gt; 
       &lt;li&gt;Mistake #4: Not having a solid contract with your clients&lt;/li&gt; 
      &lt;/ul&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt;
        Read the details here:&amp;nbsp; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;a href="http://www.copyblogger.com/protect-your-content/"&gt;Link&lt;/a&gt;&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Amazon CTO Werner Vogels Shares Nine Patterns of Cloud Adoption</title>
    <link rel="alternate" href="https://dev.cloudburo.net/2015/05/06/amazon-cto-werner-vogels-shares-nine-patterns-of-cloud-adoption.html"/>
    <id>https://dev.cloudburo.net/2015/05/06/amazon-cto-werner-vogels-shares-nine-patterns-of-cloud-adoption.html</id>
    <published>2015-05-06T05:54:45Z</published>
    <updated>2015-05-14T22:22:14+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="row"&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt;       At the Amazon Web Services AWS Summit London keynote, Werner Vogels shared nine patterns of cloud adoption that AWS have observed from its customer base over the past nine years of operation. Vogels suggested that the ease of operation, low cost and additional value-add business services provided by cloud vendors mean that organisations must embrace the cloud in order to stay competitive. Vogels, CTO of Amazon, began the keynote by stating that “cloud has become the new normal”, and cited an increasing number of companies that are developing for, or migrating to, cloud-based platforms.
    &lt;a href="http://www.infoq.com/news/2015/04/vogels-patterns-cloud-adoption?utm_campaign=infoq_content&amp;amp;utm_source=infoq&amp;amp;utm_medium=feed&amp;amp;utm_term=global"&gt;Link&lt;/a&gt;&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Docker Small Hints #3: SSH into your AWS Elastic Beanstalk Component</title>
    <link rel="alternate" href="https://dev.cloudburo.net/2015/04/25/docker-small-hints-3-ssh-into-your-aws-elastic-beanstalk-component.html"/>
    <id>https://dev.cloudburo.net/2015/04/25/docker-small-hints-3-ssh-into-your-aws-elastic-beanstalk-component.html</id>
    <published>2015-04-25T12:25:42Z</published>
    <updated>2015-05-14T22:22:14+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="row"&gt;
  &lt;div class="article"&gt;&lt;p&gt;&lt;span/&gt;      &lt;div&gt;
    Was quite a hassle in the past to setup SSH connectivity into your Elastic Beanstalk instance, luckly this got simplified. With the 
   &lt;i&gt;eb&lt;/i&gt;&amp;nbsp;Version 3&amp;nbsp;command tool you get all the necessary support.&amp;nbsp; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
  &lt;/div&gt; 
  &lt;div&gt;
    First install the&amp;nbsp; 
   &lt;i&gt;eb cli&lt;/i&gt;&amp;nbsp;interface, as described here 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb-cli3-getting-set-up.html" rel="nofollow"&gt;&lt;a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb-cli3-getting-set-up.html"&gt;http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb-cli3-getting-set-up.html&lt;/a&gt;&lt;/a&gt; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
  &lt;/div&gt; 
  &lt;div&gt;
    Run 
   &lt;i&gt;&amp;nbsp;eb init&lt;/i&gt;, which will configure the eb command line to one of your running 
   &lt;i&gt;eb&lt;/i&gt; instances. 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
  &lt;/div&gt; 
  &lt;div&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
iMac:~ Felix$ eb init 
  Select a default region
 1) us-east-1 : US East (N. Virginia) 
  2) us-west-1 : US West (N. California) 
  ... 
  (default is 3): 
  Select an application to use 
  1) curationApp
 2) [ Create new Application ] 
  (default is 2): 1 

&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt; 
   &lt;br&gt; 
  &lt;/div&gt; 

&lt;p&gt;&lt;div&gt;
    Now configure your EB&amp;nbsp;Environment&amp;nbsp;to allow ssh inbound traffic, via&amp;nbsp;&amp;nbsp; 
   &lt;i&gt;eb ssh&amp;nbsp;—setup&lt;/i&gt; command. Be&amp;nbsp;aware that will result in a re-creation of your EB environment. 
  &lt;/div&gt; 
  &lt;div&gt;
    Amongst others the command will create&amp;nbsp;the&amp;nbsp;public/private keypair as well which is put&amp;nbsp;under the default name 
   &lt;i&gt;aws-eb&lt;/i&gt;&amp;nbsp;into your local &amp;nbsp; 
   &lt;i&gt;.ssh&lt;/i&gt; directory 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
   &lt;div&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
iMac:~ Felix$ eb ssh --setup
 WARNING: You are about to setup SSH for environment "curationApp-prod". If you continue, your existing instances will have to be **terminated** and new instances will be created. The environment will be temporarily unavailable. 
  To confirm, type the environment name: curationApp-prod 
  Type a keypair name.
 (Default is aws-eb):
 Generating public/private rsa key pair. 
   ... 

  Your identification has been saved in /Users/Felix/.ssh/aws-eb. 
   ... 
  WARNING: Uploaded SSH public key for "aws-eb" into EC2 for region us-west-2. 
  INFO: Environment update is starting.                              
 INFO: Updating environment curationApp-prod's configuration settings.
 INFO: Created Auto Scaling launch configuration named: awseb-e-...-stack-AWSEBAutoScalingLaunchConfiguration-1D8ET9F9BZ592
 INFO: Deleted Auto Scaling launch configuration named: awseb-e-...-stack-AWSEBAutoScalingLaunchConfiguration-8JDT6IAKL1QQ 
  INFO: Successfully deployed new configuration to environment.  

&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 

&lt;p&gt;&lt;/div&gt; 
  &lt;div&gt;
    You are now ready to connect with the &amp;nbsp; 
   &lt;i&gt;eb ssh&lt;/i&gt; command. 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
  &lt;/div&gt; 
  &lt;div&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
iMac: ~ Felix$ eb ssh 
  INFO: Attempting to open port 22. 
  INFO: SSH port 22 open. 
         __|  __|_  )
        _|  (     /   Amazon Linux AMI 
        ___|\___|___| 
  [ec2-user ~]$  

&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt; 
   &lt;span style="font-size: 18px;"&gt;&lt;br&gt;&lt;/span&gt; 
  &lt;/div&gt; 

&lt;p&gt;&lt;div&gt;
    Log files of your instances can be found in the 
   &lt;span style=""&gt;/var/log&lt;/span&gt; directory. &amp;nbsp;The log file of your en-docker instance you will find in the following subdirectory. 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
  &lt;/div&gt; 
  &lt;div&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
[ec2-user ~]$ cd  /var/log/eb-docker/containers/eb-current-app 
  [ec2-user eb-current-app]$ ls -l  
  insgesamt 136
 -rw-r--r-- 1 root root 67113425 14. Mai 06:34 894d84f26a6a-stdouterr.log 
  drwxr-xr-x 2 root root     4096 14. Mai 06:01 rotated 

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt; 
  &lt;div&gt;
    &amp;nbsp; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;span style="font-size: 18px;"&gt;&lt;b&gt;Looking at the details of the configuration triangle&lt;/b&gt;&lt;/span&gt; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
  &lt;/div&gt; 
  &lt;div&gt;
    Memorize the following picture, which shows you the major concepts of a EC2 setup.&amp;nbsp;&amp;nbsp;AWS EC2 is the underlying Linux Container Infrastructure on top of which your EB managed&amp;nbsp;Docker Applications&amp;nbsp;will run. 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
  &lt;/div&gt; 
  &lt;div&gt;
    You Docker Container will run within one EC2 instance, represented by the orange Instance box. For each EB Docker Instance there will be one EC2 Instance instantiated. 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div&gt;&lt;/p&gt;

  &lt;/div&gt;
  &lt;img class="img-responsive img-thumbnail article" src="/images/820746984edb2ecb86de31973a2d854e.png" /&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt;
        The EC2 instance will have Security Groups to control the access. There&amp;nbsp;is a Security Group for each&amp;nbsp; EB-Instance you are running, which by default allows inbound access from the http port. This security group is now extended to allow SSH inbound traffic. 
      &lt;/div&gt; 
      &lt;div&gt;
        In the dashboard you will see a &amp;nbsp;Security Group Name which contains&amp;nbsp;the substring 
       &lt;i&gt;AWSEBSecurityGroup&amp;nbsp;(&lt;/i&gt;this value is also a tag value of the group for tag name&amp;nbsp; 
       &lt;i&gt;aws:cloudformation:logical-id&lt;/i&gt;&amp;nbsp;(Tab Tags)) 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt;&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;img class="img-responsive img-thumbnail article" src="/images/74509d1957c1fcb41391de8fb8add8f9.png" /&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt;
        This Security Group 
       &lt;i&gt;&lt;em&gt;ASWEBSecurityGroup&lt;/em&gt;&lt;/i&gt; is the configured Security Group of your EC2 docker instance running the EB environment. You would find the link in the column security group when click on Instances (left hand menu) in the Dashboard 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt;&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;img class="img-responsive img-thumbnail article" src="/images/0e16630c0c6e65305ffbd4d961df9e45.png" /&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt;
        As mentioned above a&amp;nbsp;Key Pair was created with the default name 
       &lt;i&gt;aws_eb&lt;/i&gt;&amp;nbsp;(left hand menu Key Pairs). The eb setup command made sure that this key pair was downloaded to your local .ssh directory. 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt;&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;img class="img-responsive img-thumbnail article" src="/images/a84b6851d2333a7ea9ff8cdd848ac43e.png" /&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt;
        So now we have (1) a EC2 Instance configured with (2) a &amp;nbsp;Security Group&amp;nbsp;for SSH inbound traffic&amp;nbsp;and we have (3) a Public/Private key pair&amp;nbsp; which allows us to authenticate ourselves.&amp;nbsp; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt;
        The&amp;nbsp;missing combination of (2) Security Group with (3) Key Pair can be found in the Elastic Beanstalk Dashboard via the Server Configuration tab. You can see here the Security Group as well as the drop box EC2 key pair, which ties the relevant Key Pair to the configuration. That’s it. 
      &lt;/div&gt; 
      &lt;div&gt;&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;img class="img-responsive img-thumbnail article" src="/images/58931d9f39e7ac379c3d099e40f2e74b.png" /&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt;&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
</feed>
