<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>dev@cloudburo</title>
  <subtitle>Cloudburo Developer Blog</subtitle>
  <id>https://dev.cloudburo.net/</id>
  <link href="https://dev.cloudburo.net/"/>
  <link href="https://dev.cloudburo.net/feed.xml" rel="self"/>
  <updated>2015-07-05T09:41:00Z</updated>
  <author>
    <name>Felix Kuestahler</name>
  </author>
  <entry>
    <title>Favicon Generator which generates all the pictures for the various platforms</title>
    <link rel="alternate" href="https://dev.cloudburo.net/2015/07/05/favicon-generator-which-generates-all-the-pictures-for-the-various-platforms.html"/>
    <id>https://dev.cloudburo.net/2015/07/05/favicon-generator-which-generates-all-the-pictures-for-the-various-platforms.html</id>
    <published>2015-07-05T09:41:00Z</published>
    <updated>2015-07-05T09:41:01+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="row"&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;div&gt;
        I found the 
       &lt;a href="http://realfavicongenerator.net/"&gt;following free favicon pictures generator&lt;/a&gt; incredibly useful. It generates favicon pictures and HTML code that work on all major browsers and platforms. 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;p style=" font-size: 14px;"&gt;Instead of giving you a single favicon.ico file, RealFaviconGenerator generates all the pictures and HTML code you need to get a cool, mobile- and tablet-ready favicon. Your favicon will be perfect for:&lt;/p&gt; 
      &lt;/div&gt; 
      &lt;ul style=" font-size: 14px;"&gt; 
       &lt;li style=""&gt;PC and Mac, as usual&lt;/li&gt; 
       &lt;li style=""&gt;iPhone and iPad&lt;/li&gt; 
       &lt;li style=""&gt;Android phones and tablets&lt;/li&gt; 
       &lt;li style=""&gt;Windows 8 tablets&lt;/li&gt; 
       &lt;li style=""&gt;And more&amp;hellip;&lt;/li&gt; 
      &lt;/ul&gt; 
      &lt;div style=""&gt; 
       &lt;div&gt; 
        &lt;br&gt; 
       &lt;/div&gt; 
       &lt;div&gt;
         So have a look. 
       &lt;/div&gt; 
      &lt;/div&gt;&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>A nice introduction to Microservices</title>
    <link rel="alternate" href="https://dev.cloudburo.net/2015/06/10/a-nice-introduction-to-microservices.html"/>
    <id>https://dev.cloudburo.net/2015/06/10/a-nice-introduction-to-microservices.html</id>
    <published>2015-06-10T08:53:32Z</published>
    <updated>2015-06-17T13:56:22+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="row"&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;div&gt;
        A nice introduction to Microservice topic is given by Chris Richardson (founder of CloudFoundry.com) on the nginx website. It’s a blog post in a 7-part series about designing, building, and deploying microservices. It’s worth to read the article which outlines several steps how to tackle the complexity backed by a pros and cons section about Microservices. 
      &lt;/div&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;a href="http://nginx.com/blog/introduction-to-microservices/"&gt;Link&lt;/a&gt;&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Docker Small Hints #2: Controlling Cloud Costs using Alarms in AWS</title>
    <link rel="alternate" href="https://dev.cloudburo.net/2015/06/07/docker-small-hints-2-controlling-cloud-costs-using-alarms-in-aws.html"/>
    <id>https://dev.cloudburo.net/2015/06/07/docker-small-hints-2-controlling-cloud-costs-using-alarms-in-aws.html</id>
    <published>2015-06-07T04:05:06Z</published>
    <updated>2015-06-17T13:56:22+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="row"&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;div&gt;
        In order not to wake up one morning with a high AWS Cloud bill, it’s advisable to set a BillingAlarm which will notify you when your environments are starting charging more than you expect. 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt;
        In the sample below I will get an Email when the Estimated Charges for 6 hours is passing 10 USD.&lt;br&gt;
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt;&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;img class="img-responsive img-thumbnail article" src="/images/757bd37198cd347fe51640ac3bec9e06.png" /&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt;
        It will allow you to react in time in case some of your instances will go out of your expected bound.&lt;br&gt;
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt;&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Docker Small Hints #4: Cleaning up your local zombie docker images</title>
    <link rel="alternate" href="https://dev.cloudburo.net/2015/05/27/docker-small-hints-4-cleaning-up-your-local-zombie-docker-images.html"/>
    <id>https://dev.cloudburo.net/2015/05/27/docker-small-hints-4-cleaning-up-your-local-zombie-docker-images.html</id>
    <published>2015-05-27T08:46:21Z</published>
    <updated>2015-06-17T13:56:22+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="row"&gt;
  &lt;div class="article"&gt;&lt;p&gt;&lt;span/&gt;      &lt;div&gt; 
   &lt;div&gt;
     The following commands I found very useful to get rid of zombie docker objects/images, which are accumulated over testing time. If you don’t remove them from time to time,  it can happen that your local docker environment runs out of space. Or you get some weird FileSystem errors during your docker build. 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
   &lt;div&gt;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
  docker ps -a -q | xargs -n 1 docker rm 
  docker images -q --filter &lt;span class="s2"&gt;"dangling=true"&lt;/span&gt; | xargs docker rmi 
  docker images 

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt; 
  &lt;/div&gt;&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Large-scale cluster management at Google with Borg</title>
    <link rel="alternate" href="https://dev.cloudburo.net/2015/05/25/large-scale-cluster-management-at-google-with-borg.html"/>
    <id>https://dev.cloudburo.net/2015/05/25/large-scale-cluster-management-at-google-with-borg.html</id>
    <published>2015-05-25T07:13:55Z</published>
    <updated>2015-06-17T13:56:22+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="row"&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;div&gt;
        Research@google published a new very interesting paper about their architecture of Borg at an ACM venue. It’s the underlying architecture for Kubernetes and provides a lot of insights. 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;br&gt; 
      &lt;/div&gt; 
      &lt;div&gt;
        Abstract of the document: 
      &lt;/div&gt; 
      &lt;div&gt; 
       &lt;span style=""&gt;&lt;span style=""&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt; 
      &lt;/div&gt; 
      &lt;div style=""&gt; 
       &lt;i&gt;Google&amp;rsquo;s Borg system is a cluster manager that runs hundreds of thousands of jobs, from many thousands of different applications, across a number of clusters each with up to tens of thousands of machines. It achieves high utilization by combining admission control, efficient task-packing, over-commitment, and machine sharing with process-level performance isolation. It supports high-availability applications with runtime features that minimize fault-recovery time, and scheduling policies that reduce the probability of correlated failures. Borg simplifies life for its users by offering a declarative job specification language, name service integration, real-time job monitoring, and tools to analyze and simulate system behavior.&lt;/i&gt; 
      &lt;/div&gt; 
      &lt;div style=""&gt; 
       &lt;i&gt;&lt;br&gt;&lt;/i&gt; 
      &lt;/div&gt; 
      &lt;div style=""&gt; 
       &lt;i&gt;We present a summary of the Borg system architecture and features, important design decisions, a quantitative analysis of some of its policy decisions, and a qualitative examination of lessons learned from a decade of operational experience with it.&lt;/i&gt; 
      &lt;/div&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;a href="http://research.google.com/pubs/pub43438.html"&gt;Link&lt;/a&gt;&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Grails Small Hints #2 - Running in Docker</title>
    <link rel="alternate" href="https://dev.cloudburo.net/2015/05/21/grails-small-hints-2-running-in-docker.html"/>
    <id>https://dev.cloudburo.net/2015/05/21/grails-small-hints-2-running-in-docker.html</id>
    <published>2015-05-21T05:00:38Z</published>
    <updated>2015-06-17T13:56:22+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="row"&gt;
  &lt;div class="article"&gt;&lt;p&gt;&lt;span/&gt;      &lt;div&gt; 
   &lt;div&gt;
     There is a out-of-the-box docker-grails instance provided, which  you can find  here 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;a href="https://github.com/onesysadmin/docker-grails"&gt;&lt;a href="https://github.com/onesysadmin/docker-grails"&gt;https://github.com/onesysadmin/docker-grails&lt;/a&gt;&lt;/a&gt; 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
   &lt;div&gt;
     In order to attach your local development directory &amp;ldquo;&amp;hellip;/workspace-grails/clb-platform&amp;rdquo; to the internal /app directory run it as follows 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
   &lt;div&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
docker run -i -t -p 8080:8080 --rm -v /Users/Felix/Development/workspace-grails/clb-platform:/app onesysadmin/grails grails 

&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 

&lt;p&gt;&lt;div&gt;
     You will find the IP address in the docker startup message 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
   &lt;div&gt;
     To connect the Docker client to the Docker daemon, please set: 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
   &lt;div&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
export DOCKER_CERT_PATH=/Users/Felix/.boot2docker/certs/boot2docker-vm 
  export DOCKER_TLS_VERIFY=1 
  export DOCKER_HOST=tcp://192.168.59.103:2376 

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
   &lt;div&gt;
     For example 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;a href="http://192.168.59.103:8080/clb-platform/curationApp/detail"&gt;&lt;a href="http://192.168.59.103:8080/clb-platform/curationApp/detail"&gt;http://192.168.59.103:8080/clb-platform/curationApp/detail&lt;/a&gt;&lt;/a&gt; 
   &lt;/div&gt; 
  &lt;/div&gt;&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
</feed>
