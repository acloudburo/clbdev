<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>dev@cloudburo</title>
  <subtitle></subtitle>
  <id>https://dev.cloudburo.net</id>
  <link href="https://dev.cloudburo.net"/>
  <link href="https://dev.cloudburo.net/feed.xml" rel="self"/>
  <updated>2016-11-29T21:48:26Z</updated>
  <author>
    <name>Felix K?stahler</name>
  </author>
  <entry>
    <title>The 5 pillars of the AWS Architecture Framework</title>
    <link rel="alternate" href="https://dev.cloudburo.net/2016/11/29/the-5-pillars-of-the-aws-architecture-framework.html"/>
    <id>https://dev.cloudburo.net/2016/11/29/the-5-pillars-of-the-aws-architecture-framework.html</id>
    <published>2016-11-29T21:48:26Z</published>
    <updated>2016-11-29T21:48:26+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="row"&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;div&gt;
        Recently I published an article about the
       &lt;a href="https://dev.cloudburo.net/2016/11/28/the-twelve-factor-app-methodology-for-building-saas.html"&gt;Twelve Factor App Methodology for SAAS&lt;/a&gt;, which can be applied for any programming language.
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
        In case you decide to go with
       &lt;a href="http://aws.amazon.com"&gt;aws.amazon.com&lt;/a&gt; you can complement the methodology with
       &lt;a href="http://d0.awsstatic.com/whitepapers/architecture/AWS_Well-Architected_Framework.pdf"&gt;AWS Architecture Framework&lt;/a&gt;, which provides you with a solid architectural foundation for building these new kind of applications. The white paper got recently updated (November 2016) an addresses general design principles, as well as specific best practices and guidance in five conceptual areas that AWS defines as the pillars of the Well-Architected Framework.
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;ol&gt;
        &lt;li&gt;&lt;b&gt;Security&lt;/b&gt;: The ability to protect information, systems, and assets while delivering business value through risk assessments and mitigation strategies.&lt;br&gt;&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Reliability&lt;/b&gt;:  The ability of a system to recover from infrastructure or service failures, dynamically acquire computing resources to meet demand, and mitigate disruptions such as misconfigurations or transient network issues.&lt;br&gt;&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Performance Efficiency: &lt;/b&gt;The ability to use computing resources efficiently to meet system requirements, and to maintain that efficiency as demand changes and technologies evolve.&lt;br&gt;&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Cost Optimization&lt;/b&gt;: The ability to avoid or eliminate unneeded cost or suboptimal resources.   &lt;br&gt;&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Operational Excellence: &lt;/b&gt;The ability to run and monitor systems to deliver business value and to continually improve supporting processes and procedures.&lt;br&gt;&lt;/li&gt;
       &lt;/ol&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
        When architecting solutions you make trade-offs between pillars based upon your business context, these business decisions can drive your engineering priorities. 
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
        The paper will help you to make the right decisions in context of application requirements and is a guiding light in the sometimes complex AWS ecosystems
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
        You can find the full white paper:
       &lt;b&gt;&lt;a href="http://d0.awsstatic.com/whitepapers/architecture/AWS_Well-Architected_Framework.pdf"&gt;Here&lt;/a&gt;.&lt;/b&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;b&gt;&lt;br&gt;&lt;/b&gt;
      &lt;/div&gt;
      &lt;div&gt;
        My articles to the usage of the Amazon cloud you will find under the tag
       &lt;a href="https://dev.cloudburo.net/tags/aws.html"&gt;aws&lt;/a&gt;.
      &lt;/div&gt;
      &lt;div&gt;
       &lt;b&gt;&lt;br&gt;&lt;/b&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;i&gt;This blog entry was fully produced within Evernote and published using the &lt;a href="https://publishingbot.cloudburo.net"&gt;Cloudburo Publishing Bot&lt;/a&gt;.&lt;/i&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>The Twelve Factor App Methodology for Building SAAS</title>
    <link rel="alternate" href="https://dev.cloudburo.net/2016/11/28/the-twelve-factor-app-methodology-for-building-saas.html"/>
    <id>https://dev.cloudburo.net/2016/11/28/the-twelve-factor-app-methodology-for-building-saas.html</id>
    <published>2016-11-28T21:33:21Z</published>
    <updated>2016-11-28T21:39:12+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="row"&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;div&gt;
        Deliver applications as “Software-As-A-Service” in a Cloud Platform requires to take some principles into consideration, which were not immediately obvious when coming from a classic development environment.
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
        The
       &lt;a href="http://12factor.net"&gt;12factor.net&lt;/a&gt; Web page provides the so-called twelve-factor app methodology for building software-as-a-service apps. It can be applied to apps written in any language and using any combination of backing service.
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
        It’s centred around the core principles of
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;ul&gt;
        &lt;li&gt;Use &lt;b&gt;declarative&lt;/b&gt; formats for setup automation, to minimize time and cost for new developers joining the project;&lt;br&gt;&lt;/li&gt;
        &lt;li&gt;Have a &lt;b&gt;clean contrac&lt;/b&gt;t with the underlying operating system, offering maximum portability between execution environments;&lt;br&gt;&lt;/li&gt;
        &lt;li&gt;Are suitable for &lt;b&gt;deployment&lt;/b&gt; on modern cloud platforms, obviating the need for servers and systems administration;&lt;br&gt;&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Minimize divergence&lt;/b&gt; between development and production, enabling continuous deployment for maximum agility;&lt;br&gt;&lt;/li&gt;
        &lt;li&gt;And can &lt;b&gt;scale up&lt;/b&gt; without significant changes to tooling, architecture, or development practices.&lt;br&gt;&lt;/li&gt;
       &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;Use it as your guiding cookbook when starting newly with writing software-as-a-service apps.
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;a href="http://12factor.net"&gt;&lt;b&gt;Check it out here&lt;/b&gt;&lt;/a&gt;.
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;i&gt;This blog entry was fully produced within Evernote and published using the &lt;a href="https://publishingbot.cloudburo.net"&gt;Cloudburo Publishing Bot&lt;/a&gt;.&lt;/i&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Blockchain Governance System Introduction</title>
    <link rel="alternate" href="https://dev.cloudburo.net/2016/11/22/blockchain-governance-system-introduction.html"/>
    <id>https://dev.cloudburo.net/2016/11/22/blockchain-governance-system-introduction.html</id>
    <published>2016-11-22T22:15:39Z</published>
    <updated>2016-11-27T21:51:45+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="row"&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;div&gt;
        Josh Stark provides in
       &lt;a href="http://www.coindesk.com/making-sense-blockchain-governance-applications/"&gt;this article&lt;/a&gt; an excellent introduction to the topic of Blockchain Governance Applications.
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
        It starts with a simple definition of the term “Governance”
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;i&gt;This is what I mean by &amp;ldquo;governance&amp;rdquo; for the purposes of this article – the processes and systems used to facilitate decision-making in any organization.&lt;/i&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
        This decision making process requires some basic technologies, which are provided in this context by the blockchain technology.
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
        Amongst others these are
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;ul&gt;
        &lt;li&gt;First, it requires a way to record a set of rules. Rules like who gets to vote, who gets to sit in parliament or who has commit access to a codebase.&lt;br&gt;&lt;/li&gt;
        &lt;li&gt;Second, there must be a way for people to interact with the rules.&lt;br&gt;&lt;/li&gt;
        &lt;li&gt;Third, governance systems require a way to enforce the rules.&lt;br&gt;&lt;/li&gt;
       &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;The article introduces a simple example of a voting system used by an NGO and then applies the blockchain technology to provide a Governance Application solution to the use case. This illustration process is very helpful in getting a quick and easy to understand overview of this rather complex domain.
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
        The benefits of the blockchain in the above example are
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;ul&gt;
        &lt;li&gt;First, blockchains are ideal for recording information in a way that can be later verified as authoritative. &lt;br&gt;&lt;/li&gt;
        &lt;li&gt;Second, blockchains provide a new way for people to interact with the rules directly. Some blockchains allow users to create logical scripts that are executed by the blockchain itself (smart contract code), which are executing the agreed rule.&lt;/li&gt;
        &lt;li&gt;Having the rule express as executable code in the blockchain itself we have already achieved our third requirement – enforcement. When the rule is expressed as executable code, the rule can be enforced at the same time it is exercised.&lt;br&gt;&lt;/li&gt;
       &lt;/ul&gt;
       &lt;div&gt;
        &lt;br&gt;
       &lt;/div&gt;
      &lt;/div&gt;
      &lt;div&gt;
        These three blockchain features are the foundation of any bitcoin governance system.
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
        The author then goes on a introduces the bigger picture as well outlines various existing use cases. You can find the full article
       &lt;a href="http://www.coindesk.com/making-sense-blockchain-governance-applications/"&gt;here&lt;/a&gt;.
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;i&gt;This blog entry was fully produced within Evernote and published using the &lt;a href="https://publishingbot.cloudburo.net"&gt;Cloudburo Publishing Bot&lt;/a&gt;.&lt;/i&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Meteor Small Hints #5: Server Code Fragments executed twice on Startup</title>
    <link rel="alternate" href="https://dev.cloudburo.net/2016/07/18/meteor-small-hints-5-server-code-fragments-executed-twice-on-startup.html"/>
    <id>https://dev.cloudburo.net/2016/07/18/meteor-small-hints-5-server-code-fragments-executed-twice-on-startup.html</id>
    <published>2016-07-18T16:06:09Z</published>
    <updated>2016-11-27T21:51:45+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="row"&gt;
  &lt;div class="article"&gt;&lt;p&gt;&lt;span/&gt;      &lt;div&gt;
    Recently I got confused with my Meteor application, by having the server code executed twice at startup. So the code was initialising my application twice, as well as duplicated for example my Slack Sysadmin Bot running as part of the instance.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br&gt;
  &lt;/div&gt;
  &lt;div&gt;
    I was first thinking that it has something to do with my IntelliJ Webstorm IDE running in debug mode, but also the local test-, as well the my Modulus remote environment was showing the same symptom.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br&gt;
  &lt;/div&gt;
  &lt;div&gt;
    After some hours of debugging I luckily found the following
   &lt;a href="https://github.com/Differential/meteor-workers/issues/9"&gt;Github issue entry&lt;/a&gt; which showed me the right direction.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br&gt;
  &lt;/div&gt;
  &lt;div&gt;
    As part of my application I introduced
   &lt;a href="https://github.com/Differential/meteor-workers"&gt;Differential meteor-workers&lt;/a&gt;, which allows to spawn headless worker meteor processes to work on async jobs. For example, passing a message to my Slack SysAdmin Bot is done via Job.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br&gt;
  &lt;/div&gt;
  &lt;div&gt;&lt;/p&gt;
&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="vi"&gt;@&lt;/span&gt;&lt;span class="na"&gt;SlackSysAdminBotJob&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Job&lt;/span&gt; 
    &lt;span class="na"&gt;handleJob&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; 
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vi"&gt;@&lt;/span&gt;&lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;action&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"sendMessage"&lt;/span&gt; 
        &lt;span class="vi"&gt;@&lt;/span&gt;&lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;postTo&lt;/span&gt; &lt;span class="vi"&gt;@&lt;/span&gt;&lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@&lt;/span&gt;&lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;text&lt;/span&gt; 

&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
   &lt;br&gt;
  &lt;/div&gt;

&lt;p&gt;&lt;div&gt;
    Such a async Job can be easily triggered, like shown here (which will hand the work over to a worker process.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br&gt;
  &lt;/div&gt;
  &lt;div&gt;&lt;/p&gt;
&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;
    &lt;span class="nx"&gt;Job&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;push&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SlackSysAdminBotJob&lt;/span&gt; 
          &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"sendMessage"&lt;/span&gt; 
          &lt;span class="na"&gt;slackBot&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;myBot&lt;/span&gt; 
          &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;txt&lt;/span&gt; 
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;channel&lt;/span&gt; 
        &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; 
           &lt;span class="c1"&gt;# Check it 
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
   &lt;br&gt;
  &lt;/div&gt;

&lt;p&gt;&lt;div&gt;
    Now introducing the Differential async worker resulted in the problem, that not only the master process, BUT also the worker process will be initialised with each Server startup code fragment. Which is not what we want.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br&gt;
  &lt;/div&gt;
  &lt;div&gt;
    So I had to extend each server Meter.startup code fragment by introducing an
   &lt;i&gt;isClusterMaster&lt;/i&gt; check
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;div&gt;&lt;/p&gt;
&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;
  &lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Plattform&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
      &lt;span class="na"&gt;isClusterMaster&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; 
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;Meteor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isServer&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;Npm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'cluster'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="na"&gt;isMaster&lt;/span&gt; 


&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
   &lt;br&gt;
  &lt;/div&gt;

&lt;p&gt;&lt;div&gt;
    As for example:
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br&gt;
  &lt;/div&gt;
  &lt;div&gt;&lt;/p&gt;
&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;
  &lt;span class="nx"&gt;Meteor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;startup&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;Plattform&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isClusterMaster&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
      &lt;span class="c1"&gt;# The startup code 
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;
  &lt;div&gt;
   &lt;br&gt;
  &lt;/div&gt;
  &lt;div&gt;
    Now the startup initialization will be only executed on the master in the cluster and not for each worker process.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br&gt;
  &lt;/div&gt;&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>A Terminology Guide to DAOs, DACs, DAs and More</title>
    <link rel="alternate" href="https://dev.cloudburo.net/2016/06/21/a-terminology-guide-to-daos-dacs-das-and-more.html"/>
    <id>https://dev.cloudburo.net/2016/06/21/a-terminology-guide-to-daos-dacs-das-and-more.html</id>
    <published>2016-06-21T22:17:15Z</published>
    <updated>2016-11-27T21:51:45+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="row"&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;div&gt;
        Due to the recent DAO hack in the Ethereum blockchain network (which resulted in the stealing of around 50 millions), I was starting to dig a little bit deeper into this new technology approach.
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
        The topic is quite complex and overloaded with different terms and abbreviations, which makes it difficult to understand in the beginning. Therefore I’m quite pleased that Ethereum blog, released a “Incomplete Terminology Guide” around the topic of “decentralised autonomous entities”, which is a popular topic in the digital consensus space (yet a new term for crypto-currency 2.0). It introduces concise definitions of the important concepts and helps in establishing a basic understanding (well its sounds like science fiction from time to time). The article can be found
       &lt;a href="https://blog.ethereum.org/2014/05/06/daos-dacs-das-and-more-an-incomplete-terminology-guide/"&gt;here&lt;/a&gt;.
      &lt;/div&gt;
      &lt;div&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;/div&gt;
      &lt;div&gt;
        By the way one of the most easy to read articles about the DAO hack, complemented with a lot of details and facts, can be found  in
       &lt;a href="https://medium.com/@pullnews/understanding-the-dao-hack-for-journalists-2312dd43e993#.6usjlleot"&gt;Understanding the DAO Hack for Journalists&lt;/a&gt; on Medium. It’s aimed at Journalists, which ensures that the topic is not too technical overloaded.
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
        If you want to understand the details (as well a quite readable intro is provided) refer to the following technical paper “
       &lt;a href="https://docs.google.com/document/d/10kTyCmGPhvZy94F7VWyS-dQ4lsBacR2dUgGTtV98C40/mobilebasic#heading=h.e437su2ytbf9"&gt;A Call for a temporary Moratorium on The DAO&lt;/a&gt;”, which is outlining the inherent problems in The DAO Smart Contract solution around three weeks before the Hack happened. I have to re-read the article from time to time to incrementally improve my understanding in the topic domain.
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
        Facit: Every revolutionary as well evolutionary step is not easy to achieve and there are pushback and failures. For the new kid on the block “blockchain”, it’s the second pushback after the MtGox Bitcoin disaster last year. Hopefully the “lessons are learnt” and we will in the mid-term achieve the vision of decentralised autonomous entities. 
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;span style="font-size: 11px;"&gt;&lt;i&gt;This blog entry was fully produced within Evernote and published using the &lt;a href="https://publishingbot.cloudburo.net"&gt;Cloudburo Publishing Bot&lt;/a&gt;.&lt;/i&gt;&lt;/span&gt;
      &lt;/div&gt;&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>A categorisation of bots used for conversational commerce</title>
    <link rel="alternate" href="https://dev.cloudburo.net/2016/06/09/a-categorisation-of-bots-used-for-conversational-commerce.html"/>
    <id>https://dev.cloudburo.net/2016/06/09/a-categorisation-of-bots-used-for-conversational-commerce.html</id>
    <published>2016-06-09T21:14:47Z</published>
    <updated>2016-11-27T21:51:45+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="row"&gt;
  &lt;div class="article"&gt;
    &lt;p&gt;&lt;span/&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;div&gt;
       &lt;div&gt;
        &lt;b&gt;Chat Bots&lt;/b&gt;, as the new way to engage with your clients, it’s a trending concept and approach in 2016.
       &lt;/div&gt;
       &lt;div&gt;
        &lt;br&gt;
       &lt;/div&gt;
       &lt;div&gt;
         Forbes is even asking if
        &lt;a href="http://www.forbes.com/sites/parmyolson/2016/05/09/could-chat-bots-replace-human-jobs-facebook"&gt;ChatBots could replace Human Jobs&lt;/a&gt; or VentureBeat is talking from the
        &lt;a href="http://venturebeat.com/2016/05/22/this-is-the-start-of-the-post-app-era/"&gt;Start of the Post App Era&lt;/a&gt;, which handed over to the Bot Era.
       &lt;/div&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;div&gt;
         For example refer to the following Google Trend graph, which shows how the search keyword  Chatbots spiked in the last months in 2016.
       &lt;/div&gt;
       &lt;div&gt;
        &lt;br&gt;
       &lt;/div&gt;
       &lt;div&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;/div&gt;
       &lt;div&gt;
         &lt;script type="text/javascript" src="//www.google.ch/trends/embed.js?hl=en-GB&amp;amp;q=chatbots&amp;amp;date=1/2016+12m&amp;amp;cmpt=q&amp;amp;tz=Etc/GMT-2&amp;amp;tz=Etc/GMT-2&amp;amp;content=1&amp;amp;cid=TIMESERIES_GRAPH_0&amp;amp;export=5&amp;amp;w=500&amp;amp;h=330"&gt;&lt;/script&gt;
       &lt;/div&gt;
       &lt;div&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;/div&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;br&gt;
      &lt;/div&gt;
      &lt;div&gt;
       &lt;div&gt;
         But let’s look first at the bot type categorisation which will help to better understand the topic.
       &lt;/div&gt;
       &lt;div&gt;
        &lt;br&gt;
       &lt;/div&gt;
       &lt;div&gt;
         In the e-commerce sector, they are using the term
        &lt;i&gt;conversational commerce bots&lt;/i&gt;. The
        &lt;a href="http://venturebeat.com/2016/05/21/the-5-branches-of-conversational-commerce-a-guide-for-the-bot-curious/"&gt;Venturebeat article&lt;/a&gt; by Jeff Lawson of Twilio introduces a nice categorisation of the various bot types which can be used in commerce.
       &lt;/div&gt;
       &lt;div&gt;
        &lt;br&gt;
       &lt;/div&gt;
       &lt;div&gt;
         First of all the term conversational commerce is defined as
       &lt;/div&gt;
       &lt;div&gt;
        &lt;br&gt;
       &lt;/div&gt;
       &lt;div&gt;
        &lt;i&gt;A future of technology driven by messaging (and voice) interactions that transcend current communication modalities.&lt;/i&gt;
       &lt;/div&gt;
       &lt;div&gt;
        &lt;br&gt;
       &lt;/div&gt;
       &lt;div&gt;
         Jeff Lawson counts five different trends converging on conversational commerce:
       &lt;/div&gt;
       &lt;div&gt;
        &lt;br&gt;
       &lt;/div&gt;
       &lt;div&gt;
        &lt;p&gt;1. Advanced notifications&lt;br&gt; 2. Bots&lt;br&gt; 3. Chat in apps&lt;br&gt; 4. Apps in chat&lt;br&gt; 5. Humans chatting with each other&lt;/p&gt;
       &lt;/div&gt;
       &lt;div&gt;
         You can find all the details in the Venturebeat article.
       &lt;/div&gt;
       &lt;div&gt;
        &lt;i&gt;&lt;span style="font-size: 11px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/i&gt;
       &lt;/div&gt;
       &lt;div&gt;
        &lt;span style="font-size: 11px;"&gt;&lt;i&gt;BTW: This blog entry was fully produced within Evernote and published using the &lt;a href="https://publishingbot.cloudburo.net"&gt;Cloudburo Publishing Bot&lt;/a&gt;.&lt;/i&gt;&lt;/span&gt;
       &lt;/div&gt;
      &lt;/div&gt;&lt;/p&gt;
    
    &lt;p&gt;&lt;a href="http://venturebeat.com/2016/05/21/the-5-branches-of-conversational-commerce-a-guide-for-the-bot-curious/"&gt;Link&lt;/a&gt;&lt;/p&gt;
    
  &lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
</feed>
